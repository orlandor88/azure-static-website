name: Deploy ARM Template automat pe Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Po»õi lansa manual din GitHub Actions

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: üß© CloneazƒÉ repository-ul
      uses: actions/checkout@v3

#    - name: ‚òÅÔ∏è InstaleazƒÉ Azure CLI
#      run: |
#        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
    
    - name: üîê Autentificare √Æn Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Create Resource Group if not exists
      run: |
        az group show --name ${{ secrets.AZURE_RESOURCE_GROUP }} || \
        az group create --name ${{ secrets.AZURE_RESOURCE_GROUP }} --location northeurope
        
    - name: üöÄ Deploy ARM Template
      run: |
        az deployment group create \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --template-file infra/template.json \
          --parameters @infra/parameters.json
          
    - name: ‚è≥ A»ôteaptƒÉ finalizarea deployment-ului
      run: sleep 30   
    
    - name: üîÑ ActualizeazƒÉ AZURE_STORAGE_ACCOUNT_NAME √Æn GitHub Secrets
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        STORAGE_ACCOUNT_NAME=$(az storage account list \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --query "[0].name" --output tsv)
          
        echo "Noul storage account: $STORAGE_ACCOUNT_NAME"
  
        gh secret set AZURE_STORAGE_ACCOUNT_NAME --body "$STORAGE_ACCOUNT_NAME" --repo $GITHUB_REPOSITORY
    
    - name: üîÑ A»ôteaptƒÉ Storage Account
      run: |
        for i in {1..10}; do
          if az storage account show --name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }}; then
            echo "Storage account este acum disponibil!"
            break
          fi
          echo "Storage account √ÆncƒÉ nu este disponibil. Mai a»ôtept 10 secunde..."
          sleep 10
        done
            
    - name: üîë ActualizeazƒÉ AZURE_STORAGE_ACCOUNT_KEY √Æn GitHub Secrets
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        STORAGE_KEY=$(az storage account keys list \
          --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --query "[0].value" --output tsv)
        
        echo "Noua cheie de acces: $STORAGE_KEY"

        gh secret set AZURE_STORAGE_ACCOUNT_KEY --body "$STORAGE_KEY" --repo $GITHUB_REPOSITORY

    - name: üöÄ Deploy fi»ôiere √Æn Azure Blob Storage
      run: |
        az storage blob upload-batch \
          --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} \
          --account-key ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }} \
          --destination '$web' \
          --source . \
          --overwrite true

    - name: Enable Static Website
      run: |
        az storage blob service-properties update \
          --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} \
          --static-website \
          --index-document index.html \
          --404-document 404.html